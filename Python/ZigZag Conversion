class Solution:
    def convert(self, s: str, numRows: int) -> str:
        if numRows == 1:
            return s
        Index=[]
        if len(s) % (2*numRows-2) == 0:
            col = (numRows-1) * (len(s) // (2*numRows-2))
        elif len(s) % (2*numRows-2) <= numRows:
            col = (numRows-1) * (len(s) // (2*numRows-2)) + 1
        elif len(s) % (2*numRows-2) > numRows: 
            col = (numRows-1) * (len(s) // (2*numRows-2)) + (len(s) % (2*numRows-2) -numRows +1)
        matrix = [[0] * col for _ in range(numRows)]
        
        for j in range (col):
            a= j % (numRows-1)
            b= j // (numRows-1)
            if a == 0:
                for i in range (numRows):
                    if (2*numRows-2)*b + i <= len(s)-1:
                        matrix[i][j] = (2*numRows-2)*b + i
            if a != 0:
                if (2*numRows-2)* b + numRows + a <= len(s):
                    matrix[numRows-a-1][j] = (2*numRows-2)* b + numRows - 1 + a 
        
        for i in range(numRows):
            for j in range (col):
                if matrix[i][j] != 0:
                    Index.append(matrix[i][j])
        #print(matrix, Index)
        newlist=[s[0]]
        for i in range(len(Index)):
            #print(Index[i])
            newlist.append(s[Index[i]])

        return "".join(newlist)
